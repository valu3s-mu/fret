{
  "after,null,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,after,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) & FLin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => ( not $post_condition$)) )) and (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) & FLin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => ( not $post_condition$)) )) and (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_after_satisfaction.svg"
  },
  "after,null,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,always,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ($post_condition$ S ($post_condition$ & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ($post_condition$ S ($post_condition$ & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), $post_condition$ )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ($post_condition$ S ($post_condition$ & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ($post_condition$ S ($post_condition$ & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), $post_condition$ )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_always_satisfaction.svg"
  },
  "after,null,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,before,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($post_condition$ | LAST) V (! $stop_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($post_condition$ | LAST) V (! $stop_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) S (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) S (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ($stop_condition$ => (( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) and (pre ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ($post_condition$ V (! $stop_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ($post_condition$ V (! $stop_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ($post_condition$ V (! $stop_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ($post_condition$ V (! $stop_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($post_condition$ | LAST) V (! $stop_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($post_condition$ | LAST) V (! $stop_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) S (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) S (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ($stop_condition$ => (( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) and (pre ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_before_satisfaction.svg"
  },
  "after,null,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,eventually,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_eventually_satisfaction.svg"
  },
  "after,null,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,for,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_for_satisfaction.svg"
  },
  "after,null,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,immediately,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X $post_condition$))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X $post_condition$))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((FLin_$scope_mode$ -> $post_condition$) S ((FLin_$scope_mode$ -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) S (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), (((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X $post_condition$))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X $post_condition$))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X $post_condition$))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X $post_condition$))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X $post_condition$))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X $post_condition$))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((FLin_$scope_mode$ -> $post_condition$) S ((FLin_$scope_mode$ -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) S (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), (((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_immediately_satisfaction.svg"
  },
  "after,null,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,never,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V (! $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G (! $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (G (! $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST V (! $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_never_satisfaction.svg"
  },
  "after,null,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,next,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST | (X $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST | (X $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((Y FLin_$scope_mode$) -> $post_condition$) S (((Y FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((pre ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (X $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (X $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (X $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (X $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (LAST | (X $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (LAST | (X $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((Y FLin_$scope_mode$) -> $post_condition$) S (((Y FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((pre ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_next_satisfaction.svg"
  },
  "after,null,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,null,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_null_satisfaction.svg"
  },
  "after,null,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,until,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_until_satisfaction.svg"
  },
  "after,null,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,null,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,null,within,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$-1,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F[<=$duration$] $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F[<=$duration$] $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X (F[<=$duration$] $post_condition$)))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X (F[<=$duration$] $post_condition$)))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$-1,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_null_within_satisfaction.svg"
  },
  "after,only,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,after,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) & FLin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => ( not $post_condition$)) )) and (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FLin_$scope_mode$) -> (! $post_condition$)) & FLin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$+1] FLin_$scope_mode$)) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$+1] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => ( not $post_condition$)) )) and (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) ))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,always,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> ($post_condition$ S ($post_condition$ & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ($post_condition$ S ($post_condition$ & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), $post_condition$ )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ($post_condition$ S ($post_condition$ & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ($post_condition$ S ($post_condition$ & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), $post_condition$ )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,before,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) S (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) S (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ($stop_condition$ => (( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) and (pre ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) S (($stop_condition$ -> ((! FLin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) S (($stop_condition$ -> ((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ($stop_condition$ => (( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) and (pre ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )))))) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,eventually,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) ))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,for,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((O[<=$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => $post_condition$) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,immediately,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> ((FLin_$scope_mode$ -> $post_condition$) S ((FLin_$scope_mode$ -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) S (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), (((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((FLin_$scope_mode$ -> $post_condition$) S ((FLin_$scope_mode$ -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) S (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), (((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) => $post_condition$) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,never,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,next,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> (((Y FLin_$scope_mode$) -> $post_condition$) S (((Y FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((pre ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((Y FLin_$scope_mode$) -> $post_condition$) S (((Y FLin_$scope_mode$) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) S (((Y (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((pre ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => $post_condition$) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,null,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ( not (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) ))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,until,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,only,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,only,within,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FLin_$scope_mode$) -> ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$-1,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FLin_$scope_mode$)) -> (O[<$duration$] FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S ((((! $post_condition$) S ((! $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O[<$duration$] (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $post_condition$) )) => (OT($duration$-1,0,((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,after,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) & FLin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) and ( not $post_condition$)))) => (OT($duration$,0,(((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$))) & FLin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$+1] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) and ( not $post_condition$)))) => (OT($duration$,0,(((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) or $post_condition$)))) ))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_after_satisfaction.svg"
  },
  "after,regular,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,always,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_always_satisfaction.svg"
  },
  "after,regular,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,before,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,before,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,before,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))))))))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ($stop_condition$ => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ((( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))), ( not $post_condition$) ))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! FLin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))))))))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ($stop_condition$ => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ((( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))), ( not $post_condition$) ))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_before_satisfaction.svg"
  },
  "after,regular,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,eventually,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_eventually_satisfaction.svg"
  },
  "after,regular,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,for,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,for,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,for,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_for_satisfaction.svg"
  },
  "after,regular,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,immediately,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), (($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) -> $post_condition$) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> $post_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), (($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_immediately_satisfaction.svg"
  },
  "after,regular,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,never,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_never_satisfaction.svg"
  },
  "after,regular,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,next,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,next,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,next,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> ($post_condition$ | FLin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> ($post_condition$ | FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) => ($post_condition$ or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> ($post_condition$ | FLin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$))) -> ($post_condition$ | FLin_$scope_mode$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))))) -> ($post_condition$ | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))))) => ($post_condition$ or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_next_satisfaction.svg"
  },
  "after,regular,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,null,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,null,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,null,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))))))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))))))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_null_satisfaction.svg"
  },
  "after,regular,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,until,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,until,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,until,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) -> $post_condition$)) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) -> $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))), ( not $stop_condition$) )) => $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FLin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)))) -> $post_condition$)) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))) -> $post_condition$)) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))), ( not $stop_condition$) )) => $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_until_satisfaction.svg"
  },
  "after,regular,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "after,regular,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "after,regular,within,satisfaction": {
    "ft": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "pt": "((O FLin_$scope_mode$) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$)))",
    "ptExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCode": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) or $post_condition$)))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))))) | (G (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! FLin_$scope_mode$) U (FLin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))))) | (LAST V (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "((O FLin_$scope_mode$) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FLin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FLin_$scope_mode$ | $post_condition$))) & FLin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$))))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) & (! $post_condition$))) -> (O[<$duration$] ((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) | $post_condition$))) & (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "((O((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$))))))) => (SI( ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) or $post_condition$)))) )))",
    "description": "ENFORCED: in the interval (if defined) starting strictly after the first $scope_mode$ interval and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/after_regular_within_satisfaction.svg"
  },
  "before,null,after,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,after,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,always,satisfaction": {
    "ft": "(((FFin_$scope_mode$ | LAST) V $post_condition$) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (H $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H $post_condition$)))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V $post_condition$) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V $post_condition$)) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V $post_condition$)) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_always_satisfaction.svg"
  },
  "before,null,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,before,satisfaction": {
    "ft": "((! (((! ((! $stop_condition$) & ($post_condition$ | (FFin_$scope_mode$ | LAST)))) & (! (FFin_$scope_mode$ | LAST))) U $stop_condition$)) | $scope_mode$)",
    "ftExpanded": "((! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$)))))))) & ((H (! FFin_$scope_mode$)) -> (H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$)))))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$)))))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$)))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($stop_condition$ => (( not FTP) and (pre (O($post_condition$))))))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H($stop_condition$ => (( not FTP) and (pre (O($post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "((! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($stop_condition$ => (( not FTP) and (pre (O($post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_before_satisfaction.svg"
  },
  "before,null,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,eventually,satisfaction": {
    "ft": "(((! (FFin_$scope_mode$ | LAST)) U $post_condition$) | $scope_mode$)",
    "ftExpanded": "(((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (O($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FFin_$scope_mode$) U $post_condition$) | $scope_mode$)",
    "ftInfAUExpanded": "(((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((! FFin_$scope_mode$) U $post_condition$)) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((! FFin_$scope_mode$) U $post_condition$)) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (O($post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_eventually_satisfaction.svg"
  },
  "before,null,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,for,satisfaction": {
    "ft": "(((G[<=$duration$] $post_condition$) | ((FFin_$scope_mode$ | LAST) V $post_condition$)) | $scope_mode$)",
    "ftExpanded": "(((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] FTP) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((O[<=$duration$] FTP) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((OT($duration$,0,FTP)) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((OT($duration$,0,FTP)) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] FTP) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((OT($duration$,0,FTP)) => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_for_satisfaction.svg"
  },
  "before,null,immediately,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,immediately,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,never,satisfaction": {
    "ft": "(((FFin_$scope_mode$ | LAST) V (! $post_condition$)) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H (! $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H( not $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ V (! $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ V (! $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ V (! $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H( not $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_never_satisfaction.svg"
  },
  "before,null,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,next,satisfaction": {
    "ft": "(((FFin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (FFin_$scope_mode$ | LAST)))) | $scope_mode$)",
    "ftExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((Y FTP) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((Y FTP) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((Y (! (Y TRUE))) -> $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((Y (! (Y TRUE))) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((pre (FTP)) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((pre (FTP)) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$))) | $scope_mode$)",
    "ftInfAUExpanded": "(((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((Y FTP) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((Y (! (Y TRUE))) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((pre (FTP)) => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_next_satisfaction.svg"
  },
  "before,null,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,null,satisfaction": {
    "ft": "(((! (FFin_$scope_mode$ | LAST)) U $post_condition$) | $scope_mode$)",
    "ftExpanded": "(((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (O($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! FFin_$scope_mode$) U $post_condition$) | $scope_mode$)",
    "ftInfAUExpanded": "(((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((! FFin_$scope_mode$) U $post_condition$)) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((! FFin_$scope_mode$) U $post_condition$)) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (O($post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_null_satisfaction.svg"
  },
  "before,null,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,null,until,satisfaction": {
    "ft": "(((! (((! $stop_condition$) & (! (FFin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (FFin_$scope_mode$ | LAST)) | (FFin_$scope_mode$ | LAST)) V $post_condition$)) | $scope_mode$)",
    "ftExpanded": "(((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$)) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $stop_condition$)) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((H (! $stop_condition$)) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $stop_condition$)) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((H( not $stop_condition$)) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$)) | $scope_mode$)",
    "ftInfAUExpanded": "(((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $stop_condition$)) => $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_null_until_satisfaction.svg"
  },
  "before,null,within,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,null,within,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,after,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,after,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,always,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (H $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H $post_condition$)))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,before,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$)))))))) & ((H (! FFin_$scope_mode$)) -> (H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$)))))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$)))))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$)))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($stop_condition$ => (( not FTP) and (pre (O($post_condition$))))))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H($stop_condition$ => (( not FTP) and (pre (O($post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($stop_condition$ => (( not FTP) and (pre (O($post_condition$)))))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,eventually,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (O($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (O($post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,for,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] FTP) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((O[<=$duration$] FTP) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((OT($duration$,0,FTP)) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((OT($duration$,0,FTP)) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] FTP) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((OT($duration$,0,FTP)) => $post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,immediately,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,immediately,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,never,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H (! $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H( not $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H( not $post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,next,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((Y FTP) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((Y FTP) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((Y (! (Y TRUE))) -> $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((Y (! (Y TRUE))) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((pre (FTP)) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((pre (FTP)) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((Y FTP) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((Y (! (Y TRUE))) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((pre (FTP)) => $post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,null,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$)))) & ((H (! FFin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (O($post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (O($post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,until,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $stop_condition$)) -> $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((H (! $stop_condition$)) -> $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $stop_condition$)) => $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((H( not $stop_condition$)) => $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $stop_condition$)) => $post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,only,within,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,only,within,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,after,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,after,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,always,satisfaction": {
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((FFin_$scope_mode$ | LAST) V $post_condition$)) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) V $post_condition$))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | $post_condition$))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((H (! $regular_condition$)) | $post_condition$))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or $post_condition$))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (FFin_$scope_mode$ V $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_always_satisfaction.svg"
  },
  "before,regular,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,before,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,before,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,before,satisfaction": {
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (FFin_$scope_mode$ | LAST)))) & (! (FFin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (FFin_$scope_mode$ | LAST)))) & (! (FFin_$scope_mode$ | LAST))) U $stop_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((! FTP) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))))))) & ((H (! FFin_$scope_mode$)) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((! FTP) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($stop_condition$ => ((H( not $regular_condition$)) or ((( not FTP) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H($stop_condition$ => ((H( not $regular_condition$)) or ((( not FTP) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | FFin_$scope_mode$))) & (! FFin_$scope_mode$)) U $stop_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((! FTP) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))))))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H($stop_condition$ => ((H( not $regular_condition$)) or ((( not FTP) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) )))))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_before_satisfaction.svg"
  },
  "before,regular,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,eventually,satisfaction": {
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((! (FFin_$scope_mode$ | LAST)) U $post_condition$)) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (FFin_$scope_mode$ | LAST)) U $post_condition$))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))) & ((H (! FFin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_eventually_satisfaction.svg"
  },
  "before,regular,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,for,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,for,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,for,satisfaction": {
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((FFin_$scope_mode$ | LAST) V $post_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((FFin_$scope_mode$ | LAST) V $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | $post_condition$)))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (FFin_$scope_mode$ V $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_for_satisfaction.svg"
  },
  "before,regular,immediately,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,immediately,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,never,satisfaction": {
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((FFin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) V (! $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V (! $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ V (! $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (FFin_$scope_mode$ V (! $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ V (! $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_never_satisfaction.svg"
  },
  "before,regular,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,next,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,next,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,next,satisfaction": {
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((FFin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (FFin_$scope_mode$ | LAST))))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FFin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (FFin_$scope_mode$ | LAST)))))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ($post_condition$ | FTP)))))) & ((H (! FFin_$scope_mode$)) -> (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ($post_condition$ | FTP)))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ($post_condition$ | (! (Y TRUE)))))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ($post_condition$ | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP))) => ($post_condition$ or FTP)))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP))) => ($post_condition$ or FTP)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$))))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> (FFin_$scope_mode$ | ((X $post_condition$) & (! FFin_$scope_mode$)))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ($post_condition$ | FTP))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ($post_condition$ | (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP))) => ($post_condition$ or FTP))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_next_satisfaction.svg"
  },
  "before,regular,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,null,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,null,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,null,satisfaction": {
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((! (FFin_$scope_mode$ | LAST)) U $post_condition$)) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (FFin_$scope_mode$ | LAST)) U $post_condition$))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))) & ((H (! FFin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((! FFin_$scope_mode$) U $post_condition$)) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! FFin_$scope_mode$) U $post_condition$)))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_null_satisfaction.svg"
  },
  "before,regular,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "before,regular,until,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,until,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,until,satisfaction": {
    "ft": "((((FFin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FFin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (FFin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (FFin_$scope_mode$ | LAST)) | (FFin_$scope_mode$ | LAST)) V $post_condition$))) & (! (FFin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (FFin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (FFin_$scope_mode$ | LAST)) | (FFin_$scope_mode$ | LAST)) V $post_condition$)))) | $scope_mode$)",
    "ftExpanded": "(((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$)))) | $scope_mode$)",
    "pt": "((H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) -> $post_condition$)))))) & ((H (! FFin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) -> $post_condition$)))))",
    "ptExpanded": "((H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) -> $post_condition$)))))) & ((H (! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) -> $post_condition$)))))",
    "CoCoSpecCode": "((H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $stop_condition$) )) => $post_condition$)))))) and ((H( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $stop_condition$) )) => $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$)))) | $scope_mode$)",
    "ftInfAUExpanded": "((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))) | $scope_mode$)",
    "ftInfBtw": "(((F FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FFin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))))) | $scope_mode$)",
    "ftInfBtwExpanded": "(((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtw": "((((! LAST) U FFin_$scope_mode$) -> ((FFin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FFin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))) & (! FFin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FFin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & FFin_$scope_mode$) | FFin_$scope_mode$) V $post_condition$))))) | $scope_mode$)",
    "ftFinBtwExpanded": "((((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))) | $scope_mode$)",
    "ptFinBtw": "(H ((FFin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) -> $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) -> $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H(((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $stop_condition$) )) => $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and exclusive of) the first point where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/before_regular_until_satisfaction.svg"
  },
  "before,regular,within,action": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "before,regular,within,satisfaction": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,after,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))) & ($scope_mode$ -> (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))) & ($scope_mode$ -> (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) )))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))) & ($scope_mode$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))) & ($scope_mode$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_after_satisfaction.svg"
  },
  "in,null,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,always,satisfaction": {
    "ft": "(LAST V ($scope_mode$ -> $post_condition$))",
    "ftExpanded": "(LAST V ($scope_mode$ -> $post_condition$))",
    "pt": "(H ($scope_mode$ -> $post_condition$))",
    "ptExpanded": "(H ($scope_mode$ -> $post_condition$))",
    "CoCoSpecCode": "(H($scope_mode$ => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($scope_mode$ -> $post_condition$))",
    "ftInfAUExpanded": "(G ($scope_mode$ -> $post_condition$))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V $post_condition$))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V $post_condition$))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ($post_condition$ S ($post_condition$ & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ($post_condition$ S ($post_condition$ & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), $post_condition$ )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_always_satisfaction.svg"
  },
  "in,null,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,before,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))) & ($scope_mode$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))) & ($scope_mode$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))) & ($scope_mode$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))) & ($scope_mode$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_before_satisfaction.svg"
  },
  "in,null,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,eventually,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))) & ($scope_mode$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))) & ($scope_mode$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((! Lin_$scope_mode$) U $post_condition$)))) & ($scope_mode$ -> ((! Lin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))) & ($scope_mode$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_eventually_satisfaction.svg"
  },
  "in,null,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,for,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))) & ($scope_mode$ -> ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))) & ($scope_mode$ -> ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))) & ($scope_mode$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))) & ($scope_mode$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_for_satisfaction.svg"
  },
  "in,null,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,immediately,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X $post_condition$))) & ($scope_mode$ -> $post_condition$))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X $post_condition$))) & ($scope_mode$ -> $post_condition$))",
    "pt": "(H (Fin_$scope_mode$ -> $post_condition$))",
    "ptExpanded": "(H (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$))",
    "CoCoSpecCode": "(H(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X $post_condition$))) & ($scope_mode$ -> $post_condition$))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X $post_condition$))) & ($scope_mode$ -> $post_condition$))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> $post_condition$)))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> $post_condition$)))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> $post_condition$)))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> $post_condition$)))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> $post_condition$)))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> $post_condition$)))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> $post_condition$)))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((Fin_$scope_mode$ -> $post_condition$) S ((Fin_$scope_mode$ -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$) S ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_immediately_satisfaction.svg"
  },
  "in,null,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,never,satisfaction": {
    "ft": "(LAST V ($scope_mode$ -> (! $post_condition$)))",
    "ftExpanded": "(LAST V ($scope_mode$ -> (! $post_condition$)))",
    "pt": "(H ($scope_mode$ -> (! $post_condition$)))",
    "ptExpanded": "(H ($scope_mode$ -> (! $post_condition$)))",
    "CoCoSpecCode": "(H($scope_mode$ => ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($scope_mode$ -> (! $post_condition$)))",
    "ftInfAUExpanded": "(G ($scope_mode$ -> (! $post_condition$)))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V (! $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V (! $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_never_satisfaction.svg"
  },
  "in,null,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,next,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))) & ($scope_mode$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))) & ($scope_mode$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_next_satisfaction.svg"
  },
  "in,null,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,null,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))) & ($scope_mode$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))) & ($scope_mode$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((! Lin_$scope_mode$) U $post_condition$)))) & ($scope_mode$ -> ((! Lin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))) & ($scope_mode$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((! Lin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_null_satisfaction.svg"
  },
  "in,null,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,until,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))) & ($scope_mode$ -> ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))) & ($scope_mode$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))) & ($scope_mode$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))) & ($scope_mode$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_until_satisfaction.svg"
  },
  "in,null,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,null,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,null,within,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_null_within_satisfaction.svg"
  },
  "in,only,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,after,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) )))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] Fin_$scope_mode$) -> (! $post_condition$)) & Fin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$+1] Fin_$scope_mode$)) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$+1] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => ( not $post_condition$)) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) ))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,always,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ($post_condition$ S ($post_condition$ & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ($post_condition$ S ($post_condition$ & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ($post_condition$ S ($post_condition$ & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ($post_condition$ S ($post_condition$ & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), $post_condition$ ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), $post_condition$ ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ($post_condition$ S ($post_condition$ & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ($post_condition$ S ($post_condition$ & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), $post_condition$ )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,before,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) S (($stop_condition$ -> ((! Fin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) S (($stop_condition$ -> ((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => (( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,eventually,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,for,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((O[<=$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,immediately,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((Fin_$scope_mode$ -> $post_condition$) S ((Fin_$scope_mode$ -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((Fin_$scope_mode$ -> $post_condition$) S ((Fin_$scope_mode$ -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$) S ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$) S ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((Fin_$scope_mode$ -> $post_condition$) S ((Fin_$scope_mode$ -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$) S ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) => $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,never,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,next,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((Y Fin_$scope_mode$) -> $post_condition$) S (((Y Fin_$scope_mode$) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) S (((Y ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) => $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,null,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ( not (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,until,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,only,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,only,within,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & Fin_$scope_mode$)) -> (O[<$duration$] Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S ((((! $post_condition$) S ((! $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (O[<$duration$] ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,after,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (Lin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) or $post_condition$)))) )))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) or $post_condition$)))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (Lin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] Lin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$))) & Fin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) or $post_condition$)))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_after_satisfaction.svg"
  },
  "in,regular,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,always,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V $post_condition$)))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$)))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_always_satisfaction.svg"
  },
  "in,regular,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,before,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,before,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,before,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) ))))))) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | Lin_$scope_mode$))) & (! Lin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! Fin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ($stop_condition$ => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ((( not ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_before_satisfaction.svg"
  },
  "in,regular,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,eventually,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_eventually_satisfaction.svg"
  },
  "in,regular,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,for,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,for,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,for,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((Lin_$scope_mode$ | LAST) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V $post_condition$))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (Lin_$scope_mode$ V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V $post_condition$)))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))))) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_for_satisfaction.svg"
  },
  "in,regular,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,immediately,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> $post_condition$))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X $post_condition$) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$)))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> $post_condition$)))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) -> $post_condition$) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> $post_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_immediately_satisfaction.svg"
  },
  "in,regular,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,never,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ V (! $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_never_satisfaction.svg"
  },
  "in,regular,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,next,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,next,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,next,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((Lin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (Lin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X $post_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> ($post_condition$ | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> ($post_condition$ | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> ($post_condition$ | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> ($post_condition$ | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) => ($post_condition$ or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) => ($post_condition$ or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$)))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> (Lin_$scope_mode$ | ((X $post_condition$) & (! Lin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X $post_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))) -> ($post_condition$ | Fin_$scope_mode$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> ($post_condition$ | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))) -> ($post_condition$ | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$))))))) => ($post_condition$ or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_next_satisfaction.svg"
  },
  "in,regular,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,null,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,null,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,null,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (Lin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$))))))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! Lin_$scope_mode$) U $post_condition$)) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! Lin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_null_satisfaction.svg"
  },
  "in,regular,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,until,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,until,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,until,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (Lin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (Lin_$scope_mode$ | LAST)) | (Lin_$scope_mode$ | LAST)) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) V $post_condition$))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) -> $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) -> $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! Lin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & Lin_$scope_mode$) | Lin_$scope_mode$) V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) V $post_condition$)))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & Fin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)))) -> $post_condition$)) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))) -> $post_condition$)) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_until_satisfaction.svg"
  },
  "in,regular,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "in,regular,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "in,regular,within,satisfaction": {
    "ft": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))))) & ($scope_mode$ -> (((Lin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (Lin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))) & (! (Lin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (Lin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))))) & ($scope_mode$ -> ((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))))",
    "pt": "((H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))) & (((! Lin_$scope_mode$) S ((! Lin_$scope_mode$) & Fin_$scope_mode$)) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$))))",
    "ptExpanded": "((H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))) & (((! ((! $scope_mode$) & (Y $scope_mode$))) S ((! ((! $scope_mode$) & (Y $scope_mode$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$))))))))",
    "CoCoSpecCode": "((H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) or $post_condition$)))) ))))) and ((SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ( not (( not $scope_mode$) and (pre ($scope_mode$)))) )) => (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! Fin_$scope_mode$) | (X ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))))) & ($scope_mode$ -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))) & ($scope_mode$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! Fin_$scope_mode$) | (X ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))) & ($scope_mode$ -> ((F Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! Lin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (X ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> ((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (Fin_$scope_mode$ & (! LAST))) | (X (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))) & ($scope_mode$ -> (((! LAST) U Lin_$scope_mode$) -> ((Lin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! Lin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$))) & (! Lin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] Lin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (! LAST))) | (X (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))) & ($scope_mode$ -> (((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))))",
    "ptFinBtw": "(H ((Lin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | Fin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (Fin_$scope_mode$ | $post_condition$))) & Fin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((((! $scope_mode$) & (Y $scope_mode$)) & (Y TRUE)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))) & (! $post_condition$))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) | $post_condition$))) & ($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H(((( not $scope_mode$) and (pre ($scope_mode$))) and ( not FTP)) => (pre (SI( ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or ($scope_mode$ and (FTP or (pre ( not $scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) or $post_condition$)))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/in_regular_within_satisfaction.svg"
  },
  "notin,null,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,after,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))) & ((! $scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))) & ((! $scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_after_satisfaction.svg"
  },
  "notin,null,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,always,satisfaction": {
    "ft": "(LAST V ((! $scope_mode$) -> $post_condition$))",
    "ftExpanded": "(LAST V ((! $scope_mode$) -> $post_condition$))",
    "pt": "(H ((! $scope_mode$) -> $post_condition$))",
    "ptExpanded": "(H ((! $scope_mode$) -> $post_condition$))",
    "CoCoSpecCode": "(H(( not $scope_mode$) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ((! $scope_mode$) -> $post_condition$))",
    "ftInfAUExpanded": "(G ((! $scope_mode$) -> $post_condition$))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_always_satisfaction.svg"
  },
  "notin,null,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,before,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_before_satisfaction.svg"
  },
  "notin,null,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,eventually,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! LNin_$scope_mode$) U $post_condition$)))) & ((! $scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) & ((! $scope_mode$) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_eventually_satisfaction.svg"
  },
  "notin,null,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,for,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))) & ((! $scope_mode$) -> ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))) & ((! $scope_mode$) -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))) & ((! $scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))) & ((! $scope_mode$) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_for_satisfaction.svg"
  },
  "notin,null,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,immediately,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X $post_condition$))) & ((! $scope_mode$) -> $post_condition$))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X $post_condition$))) & ((! $scope_mode$) -> $post_condition$))",
    "pt": "(H (FNin_$scope_mode$ -> $post_condition$))",
    "ptExpanded": "(H (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$))",
    "CoCoSpecCode": "(H((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X $post_condition$))) & ((! $scope_mode$) -> $post_condition$))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X $post_condition$))) & ((! $scope_mode$) -> $post_condition$))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> $post_condition$)))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> $post_condition$)))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$)))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$)))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> $post_condition$)))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$)))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> $post_condition$)))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((FNin_$scope_mode$ -> $post_condition$) S ((FNin_$scope_mode$ -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$) S ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_immediately_satisfaction.svg"
  },
  "notin,null,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,never,satisfaction": {
    "ft": "(LAST V ($post_condition$ -> $scope_mode$))",
    "ftExpanded": "(LAST V ($post_condition$ -> $scope_mode$))",
    "pt": "(H ($post_condition$ -> $scope_mode$))",
    "ptExpanded": "(H ($post_condition$ -> $scope_mode$))",
    "CoCoSpecCode": "(H($post_condition$ => $scope_mode$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($post_condition$ -> $scope_mode$))",
    "ftInfAUExpanded": "(G ($post_condition$ -> $scope_mode$))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_never_satisfaction.svg"
  },
  "notin,null,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,next,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_next_satisfaction.svg"
  },
  "notin,null,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,null,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! LNin_$scope_mode$) U $post_condition$)))) & ((! $scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) & ((! $scope_mode$) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_null_satisfaction.svg"
  },
  "notin,null,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,until,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_until_satisfaction.svg"
  },
  "notin,null,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,null,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,null,within,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))) & ((! $scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) & ((! $scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))) & ((! $scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) & ((! $scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_null_within_satisfaction.svg"
  },
  "notin,only,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,after,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)) & ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$+1] FNin_$scope_mode$)) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,always,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ($post_condition$ S ($post_condition$ & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ($post_condition$ S ($post_condition$ & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,before,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,eventually,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,for,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) S (((O[<=$duration$] FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,immediately,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((FNin_$scope_mode$ -> $post_condition$) S ((FNin_$scope_mode$ -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((FNin_$scope_mode$ -> $post_condition$) S ((FNin_$scope_mode$ -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$) S ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$) S ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((FNin_$scope_mode$ -> $post_condition$) S ((FNin_$scope_mode$ -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$) S ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,never,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,next,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y FNin_$scope_mode$) -> $post_condition$) S (((Y FNin_$scope_mode$) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,null,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,until,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,only,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,only,within,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,after,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or $post_condition$)))) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or $post_condition$)))) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$+1] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) S (((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$+1] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )) and (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or $post_condition$)))) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_after_satisfaction.svg"
  },
  "notin,regular,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,always,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_always_satisfaction.svg"
  },
  "notin,regular,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,before,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,before,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,before,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ($post_condition$ | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_before_satisfaction.svg"
  },
  "notin,regular,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,eventually,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_eventually_satisfaction.svg"
  },
  "notin,regular,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,for,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,for,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,for,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((LNin_$scope_mode$ | LAST) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V $post_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LNin_$scope_mode$ V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V $post_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$)) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_for_satisfaction.svg"
  },
  "notin,regular,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,immediately,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> $post_condition$))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X $post_condition$) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> $post_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_immediately_satisfaction.svg"
  },
  "notin,regular,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,never,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_never_satisfaction.svg"
  },
  "notin,regular,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,next,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,next,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,next,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X $post_condition$) & (! (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X $post_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ($post_condition$ | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ($post_condition$ | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ($post_condition$ | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ($post_condition$ | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) => ($post_condition$ or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) => ($post_condition$ or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X $post_condition$) & (! LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X $post_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ($post_condition$ | FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ($post_condition$ | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ($post_condition$ | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) => ($post_condition$ or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_next_satisfaction.svg"
  },
  "notin,regular,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,null,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,null,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,null,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_null_satisfaction.svg"
  },
  "notin,regular,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,until,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,until,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,until,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (LNin_$scope_mode$ | LAST)) | (LNin_$scope_mode$ | LAST)) V $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) V $post_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & LNin_$scope_mode$) | LNin_$scope_mode$) V $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ((! $post_condition$) & (! $stop_condition$)))) | ((($post_condition$ & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) V $post_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $stop_condition$) )) => $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_until_satisfaction.svg"
  },
  "notin,regular,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "notin,regular,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "notin,regular,within,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or $post_condition$)))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or $post_condition$)))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & (! $post_condition$))) -> (O[<$duration$] (FNin_$scope_mode$ | $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & (! $post_condition$))) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and ( not $post_condition$)))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or $post_condition$)))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/notin_regular_within_satisfaction.svg"
  },
  "null,null,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,after,satisfaction": {
    "ft": "(((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))",
    "ftExpanded": "(((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))",
    "pt": "((H ((O[<=$duration$] FTP) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] FTP))))",
    "ptExpanded": "((H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (! (Y TRUE))))))",
    "CoCoSpecCode": "((H((OT($duration$,0,FTP)) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,FTP)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))",
    "ftInfAUExpanded": "(((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))",
    "ftInfBtw": "(((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))",
    "ftInfBtwExpanded": "(((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))",
    "ftFinBtw": "(((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))",
    "ftFinBtwExpanded": "(((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))",
    "ptFinBtw": "((H ((O[<=$duration$] FTP) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] FTP))))",
    "ptFinBtwExpanded": "((H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (! (Y TRUE))))))",
    "CoCoSpecCodeFinBtw": "((H((OT($duration$,0,FTP)) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,FTP)))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_after_satisfaction.svg"
  },
  "null,null,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,always,satisfaction": {
    "ft": "(LAST V $post_condition$)",
    "ftExpanded": "(LAST V $post_condition$)",
    "pt": "(H $post_condition$)",
    "ptExpanded": "(H $post_condition$)",
    "CoCoSpecCode": "(H($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G $post_condition$)",
    "ftInfAUExpanded": "(G $post_condition$)",
    "ftInfBtw": "(G $post_condition$)",
    "ftInfBtwExpanded": "(G $post_condition$)",
    "ftFinBtw": "(LAST V $post_condition$)",
    "ftFinBtwExpanded": "(LAST V $post_condition$)",
    "ptFinBtw": "(H $post_condition$)",
    "ptFinBtwExpanded": "(H $post_condition$)",
    "CoCoSpecCodeFinBtw": "(H($post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
  },
  "null,null,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,before,satisfaction": {
    "ft": "(($post_condition$ | LAST) V (! $stop_condition$))",
    "ftExpanded": "(($post_condition$ | LAST) V (! $stop_condition$))",
    "pt": "(H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$)))))",
    "ptExpanded": "(H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$)))))",
    "CoCoSpecCode": "(H($stop_condition$ => (( not FTP) and (pre (O($post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "($post_condition$ V (! $stop_condition$))",
    "ftInfAUExpanded": "($post_condition$ V (! $stop_condition$))",
    "ftInfBtw": "($post_condition$ V (! $stop_condition$))",
    "ftInfBtwExpanded": "($post_condition$ V (! $stop_condition$))",
    "ftFinBtw": "(($post_condition$ | LAST) V (! $stop_condition$))",
    "ftFinBtwExpanded": "(($post_condition$ | LAST) V (! $stop_condition$))",
    "ptFinBtw": "(H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$)))))",
    "ptFinBtwExpanded": "(H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H($stop_condition$ => (( not FTP) and (pre (O($post_condition$))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_before_satisfaction.svg"
  },
  "null,null,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,eventually,satisfaction": {
    "ft": "((! LAST) U $post_condition$)",
    "ftExpanded": "((! LAST) U $post_condition$)",
    "pt": "(O $post_condition$)",
    "ptExpanded": "(O $post_condition$)",
    "CoCoSpecCode": "(O($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(F $post_condition$)",
    "ftInfAUExpanded": "(F $post_condition$)",
    "ftInfBtw": "(F $post_condition$)",
    "ftInfBtwExpanded": "(F $post_condition$)",
    "ftFinBtw": "((! LAST) U $post_condition$)",
    "ftFinBtwExpanded": "((! LAST) U $post_condition$)",
    "ptFinBtw": "(O $post_condition$)",
    "ptFinBtwExpanded": "(O $post_condition$)",
    "CoCoSpecCodeFinBtw": "(O($post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_eventually_satisfaction.svg"
  },
  "null,null,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,for,satisfaction": {
    "ft": "((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))",
    "ftExpanded": "((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))",
    "pt": "(H ((O[<=$duration$] FTP) -> $post_condition$))",
    "ptExpanded": "(H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$))",
    "CoCoSpecCode": "(H((OT($duration$,0,FTP)) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G[<=$duration$] $post_condition$) | (G $post_condition$))",
    "ftInfAUExpanded": "((G[<=$duration$] $post_condition$) | (G $post_condition$))",
    "ftInfBtw": "((G[<=$duration$] $post_condition$) | (G $post_condition$))",
    "ftInfBtwExpanded": "((G[<=$duration$] $post_condition$) | (G $post_condition$))",
    "ftFinBtw": "((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))",
    "ftFinBtwExpanded": "((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))",
    "ptFinBtw": "(H ((O[<=$duration$] FTP) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,0,FTP)) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_for_satisfaction.svg"
  },
  "null,null,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,immediately,satisfaction": {
    "ft": "$post_condition$",
    "ftExpanded": "$post_condition$",
    "pt": "(H (FTP -> $post_condition$))",
    "ptExpanded": "(H ((! (Y TRUE)) -> $post_condition$))",
    "CoCoSpecCode": "(H(FTP => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "$post_condition$",
    "ftInfAUExpanded": "$post_condition$",
    "ftInfBtw": "$post_condition$",
    "ftInfBtwExpanded": "$post_condition$",
    "ftFinBtw": "$post_condition$",
    "ftFinBtwExpanded": "$post_condition$",
    "ptFinBtw": "(H (FTP -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((! (Y TRUE)) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H(FTP => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_immediately_satisfaction.svg"
  },
  "null,null,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,never,satisfaction": {
    "ft": "(LAST V (! $post_condition$))",
    "ftExpanded": "(LAST V (! $post_condition$))",
    "pt": "(H (! $post_condition$))",
    "ptExpanded": "(H (! $post_condition$))",
    "CoCoSpecCode": "(H( not $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G (! $post_condition$))",
    "ftInfAUExpanded": "(G (! $post_condition$))",
    "ftInfBtw": "(G (! $post_condition$))",
    "ftInfBtwExpanded": "(G (! $post_condition$))",
    "ftFinBtw": "(LAST V (! $post_condition$))",
    "ftFinBtwExpanded": "(LAST V (! $post_condition$))",
    "ptFinBtw": "(H (! $post_condition$))",
    "ptFinBtwExpanded": "(H (! $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H( not $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_never_satisfaction.svg"
  },
  "null,null,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,next,satisfaction": {
    "ft": "(LAST | (X $post_condition$))",
    "ftExpanded": "(LAST | (X $post_condition$))",
    "pt": "(H ((Y FTP) -> $post_condition$))",
    "ptExpanded": "(H ((Y (! (Y TRUE))) -> $post_condition$))",
    "CoCoSpecCode": "(H((pre (FTP)) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(X $post_condition$)",
    "ftInfAUExpanded": "(X $post_condition$)",
    "ftInfBtw": "(X $post_condition$)",
    "ftInfBtwExpanded": "(X $post_condition$)",
    "ftFinBtw": "(LAST | (X $post_condition$))",
    "ftFinBtwExpanded": "(LAST | (X $post_condition$))",
    "ptFinBtw": "(H ((Y FTP) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((Y (! (Y TRUE))) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((pre (FTP)) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_next_satisfaction.svg"
  },
  "null,null,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,null,satisfaction": {
    "ft": "((! LAST) U $post_condition$)",
    "ftExpanded": "((! LAST) U $post_condition$)",
    "pt": "(O $post_condition$)",
    "ptExpanded": "(O $post_condition$)",
    "CoCoSpecCode": "(O($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(F $post_condition$)",
    "ftInfAUExpanded": "(F $post_condition$)",
    "ftInfBtw": "(F $post_condition$)",
    "ftInfBtwExpanded": "(F $post_condition$)",
    "ftFinBtw": "((! LAST) U $post_condition$)",
    "ftFinBtwExpanded": "((! LAST) U $post_condition$)",
    "ptFinBtw": "(O $post_condition$)",
    "ptFinBtwExpanded": "(O $post_condition$)",
    "CoCoSpecCodeFinBtw": "(O($post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_null_satisfaction.svg"
  },
  "null,null,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,until,satisfaction": {
    "ft": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))",
    "ftExpanded": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))",
    "pt": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "ptExpanded": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "CoCoSpecCode": "(H((H( not $stop_condition$)) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))",
    "ftInfAUExpanded": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))",
    "ftInfBtw": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))",
    "ftInfBtwExpanded": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))",
    "ftFinBtw": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))",
    "ftFinBtwExpanded": "(($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))",
    "ptFinBtw": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((H( not $stop_condition$)) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_until_satisfaction.svg"
  },
  "null,null,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,null,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,null,within,satisfaction": {
    "ft": "((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))",
    "ftExpanded": "((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))",
    "pt": "(H ((H (! $post_condition$)) -> (O[<$duration$] FTP)))",
    "ptExpanded": "(H ((H (! $post_condition$)) -> (O[<$duration$] (! (Y TRUE)))))",
    "CoCoSpecCode": "(H((H( not $post_condition$)) => (OT($duration$-1,0,FTP))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(F[<=$duration$] $post_condition$)",
    "ftInfAUExpanded": "(F[<=$duration$] $post_condition$)",
    "ftInfBtw": "(F[<=$duration$] $post_condition$)",
    "ftInfBtwExpanded": "(F[<=$duration$] $post_condition$)",
    "ftFinBtw": "((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))",
    "ftFinBtwExpanded": "((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))",
    "ptFinBtw": "(H ((H (! $post_condition$)) -> (O[<$duration$] FTP)))",
    "ptFinBtwExpanded": "(H ((H (! $post_condition$)) -> (O[<$duration$] (! (Y TRUE)))))",
    "CoCoSpecCodeFinBtw": "(H((H( not $post_condition$)) => (OT($duration$-1,0,FTP))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_null_within_satisfaction.svg"
  },
  "null,only,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,after,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((O[<=$duration$] FTP) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] FTP))))",
    "ptExpanded": "((H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (! (Y TRUE))))))",
    "CoCoSpecCode": "((H((OT($duration$,0,FTP)) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,FTP)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((H ((O[<=$duration$] FTP) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] FTP))))",
    "ptFinBtwExpanded": "((H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$))) & (H ((H (! $post_condition$)) -> (O[<$duration$+1] (! (Y TRUE))))))",
    "CoCoSpecCodeFinBtw": "((H((OT($duration$,0,FTP)) => ( not $post_condition$))) and (H((H( not $post_condition$)) => (OT($duration$,0,FTP)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,always,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(H $post_condition$)",
    "ptExpanded": "(H $post_condition$)",
    "CoCoSpecCode": "(H($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H $post_condition$)",
    "ptFinBtwExpanded": "(H $post_condition$)",
    "CoCoSpecCodeFinBtw": "(H($post_condition$))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,before,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$)))))",
    "ptExpanded": "(H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$)))))",
    "CoCoSpecCode": "(H($stop_condition$ => (( not FTP) and (pre (O($post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ($stop_condition$ -> ((! FTP) & (Y (O $post_condition$)))))",
    "ptFinBtwExpanded": "(H ($stop_condition$ -> ((Y TRUE) & (Y (O $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H($stop_condition$ => (( not FTP) and (pre (O($post_condition$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,eventually,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(O $post_condition$)",
    "ptExpanded": "(O $post_condition$)",
    "CoCoSpecCode": "(O($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(O $post_condition$)",
    "ptFinBtwExpanded": "(O $post_condition$)",
    "CoCoSpecCodeFinBtw": "(O($post_condition$))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,for,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(H ((O[<=$duration$] FTP) -> $post_condition$))",
    "ptExpanded": "(H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$))",
    "CoCoSpecCode": "(H((OT($duration$,0,FTP)) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((O[<=$duration$] FTP) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((O[<=$duration$] (! (Y TRUE))) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,0,FTP)) => $post_condition$))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,immediately,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(H (FTP -> $post_condition$))",
    "ptExpanded": "(H ((! (Y TRUE)) -> $post_condition$))",
    "CoCoSpecCode": "(H(FTP => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H (FTP -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((! (Y TRUE)) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H(FTP => $post_condition$))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,never,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(H (! $post_condition$))",
    "ptExpanded": "(H (! $post_condition$))",
    "CoCoSpecCode": "(H( not $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H (! $post_condition$))",
    "ptFinBtwExpanded": "(H (! $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H( not $post_condition$))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,next,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(H ((Y FTP) -> $post_condition$))",
    "ptExpanded": "(H ((Y (! (Y TRUE))) -> $post_condition$))",
    "CoCoSpecCode": "(H((pre (FTP)) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((Y FTP) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((Y (! (Y TRUE))) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((pre (FTP)) => $post_condition$))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,null,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(O $post_condition$)",
    "ptExpanded": "(O $post_condition$)",
    "CoCoSpecCode": "(O($post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(O $post_condition$)",
    "ptFinBtwExpanded": "(O $post_condition$)",
    "CoCoSpecCodeFinBtw": "(O($post_condition$))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,until,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "ptExpanded": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "CoCoSpecCode": "(H((H( not $stop_condition$)) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "ptFinBtwExpanded": "(H ((H (! $stop_condition$)) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((H( not $stop_condition$)) => $post_condition$))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,only,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,only,within,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "(H ((H (! $post_condition$)) -> (O[<$duration$] FTP)))",
    "ptExpanded": "(H ((H (! $post_condition$)) -> (O[<$duration$] (! (Y TRUE)))))",
    "CoCoSpecCode": "(H((H( not $post_condition$)) => (OT($duration$-1,0,FTP))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((H (! $post_condition$)) -> (O[<$duration$] FTP)))",
    "ptFinBtwExpanded": "(H ((H (! $post_condition$)) -> (O[<$duration$] (! (Y TRUE)))))",
    "CoCoSpecCodeFinBtw": "(H((H( not $post_condition$)) => (OT($duration$-1,0,FTP))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,after,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "pt": "((H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) & (! $post_condition$))) -> (O[<$duration$+1] (FTP | $post_condition$)))))",
    "ptExpanded": "((H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) & (! $post_condition$))) -> (O[<$duration$+1] ((! (Y TRUE)) | $post_condition$)))))",
    "CoCoSpecCode": "((H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) and ( not $post_condition$)))) => (OT($duration$,0,(FTP or $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$))) & (F[<=$duration$+1] $post_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))) & ($regular_condition$ -> (((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$))) & ((F[<=$duration$+1] $post_condition$) | (F[<$duration$+1] LAST)))))",
    "ptFinBtw": "((H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) & (! $post_condition$))) -> (O[<$duration$+1] (FTP | $post_condition$)))))",
    "ptFinBtwExpanded": "((H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | (! $post_condition$)))) & (H ((O[=$duration$+1] (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) & (! $post_condition$))) -> (O[<$duration$+1] ((! (Y TRUE)) | $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "((H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or ( not $post_condition$)))) and (H((OT($duration$+1,$duration$+1,(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) and ( not $post_condition$)))) => (OT($duration$,0,(FTP or $post_condition$))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$). Moreover, RES must hold at the point that is at distance $duration$+1 from the trigger, that is, trigger+$duration$+1, except if the end of the interval occurs earlier.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_after_satisfaction.svg"
  },
  "null,regular,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,always,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))",
    "pt": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G $post_condition$)))) & ($regular_condition$ -> (G $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V $post_condition$)))) & ($regular_condition$ -> (LAST V $post_condition$)))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
  },
  "null,regular,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,before,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,before,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,before,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "pt": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((! FTP) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))))",
    "ptExpanded": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))))",
    "CoCoSpecCode": "(H($stop_condition$ => ((H( not $regular_condition$)) or ((( not FTP) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ($post_condition$ V (! $stop_condition$))))) & ($regular_condition$ -> ($post_condition$ V (! $stop_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($post_condition$ | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (($post_condition$ | LAST) V (! $stop_condition$))))",
    "ptFinBtw": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((! FTP) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))))",
    "ptFinBtwExpanded": "(H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) & (Y (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))))",
    "CoCoSpecCodeFinBtw": "(H($stop_condition$ => ((H( not $regular_condition$)) or ((( not FTP) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at least once strictly before the state where the stop condition holds. If the stop condition never occurs, RES does not need to hold. If the stop condition holds at the trigger, the requirement is not satisified.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_before_satisfaction.svg"
  },
  "null,regular,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,eventually,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "pt": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))",
    "ptExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))",
    "CoCoSpecCode": "((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ptFinBtw": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))",
    "ptFinBtwExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_eventually_satisfaction.svg"
  },
  "null,regular,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,for,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,for,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,for,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "pt": "(H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "ptExpanded": "(H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "CoCoSpecCode": "(H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] $post_condition$) | (G $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (G $post_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))) & ($regular_condition$ -> ((G[<=$duration$] $post_condition$) | (LAST V $post_condition$))))",
    "ptFinBtw": "(H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "ptFinBtwExpanded": "(H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the trigger and remain true for $duration$ time points past the trigger (i.e., trigger, trigger+1, ..., and trigger+$duration$), or to the end of the interval if the interval ends sooner than trigger+$duration$.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_for_satisfaction.svg"
  },
  "null,regular,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,immediately,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "pt": "(H (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) -> $post_condition$))",
    "ptExpanded": "(H (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) -> $post_condition$))",
    "CoCoSpecCode": "(H(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) => $post_condition$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X $post_condition$))) & ($regular_condition$ -> $post_condition$))",
    "ptFinBtw": "(H (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) -> $post_condition$))",
    "ptFinBtwExpanded": "(H (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) -> $post_condition$))",
    "CoCoSpecCodeFinBtw": "(H(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) => $post_condition$))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, if trigger holds then RES also holds at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_immediately_satisfaction.svg"
  },
  "null,regular,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,never,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "pt": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | (! $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or ( not $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_never_satisfaction.svg"
  },
  "null,regular,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,next,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,next,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,next,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "pt": "(H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ($post_condition$ | FTP)))",
    "ptExpanded": "(H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ($post_condition$ | (! (Y TRUE)))))",
    "CoCoSpecCode": "(H((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP))) => ($post_condition$ or FTP)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X $post_condition$)))) & ($regular_condition$ -> (X $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X $post_condition$))))) & ($regular_condition$ -> (LAST | (X $post_condition$))))",
    "ptFinBtw": "(H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ($post_condition$ | FTP)))",
    "ptFinBtwExpanded": "(H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ($post_condition$ | (! (Y TRUE)))))",
    "CoCoSpecCodeFinBtw": "(H((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP))) => ($post_condition$ or FTP)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at the next time step.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_next_satisfaction.svg"
  },
  "null,regular,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,null,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,null,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,null,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "pt": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))",
    "ptExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))",
    "CoCoSpecCode": "((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))",
    "ptFinBtw": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))",
    "ptFinBtwExpanded": "((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_null_satisfaction.svg"
  },
  "null,regular,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,until,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,until,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,until,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "pt": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) -> $post_condition$)))",
    "ptExpanded": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) -> $post_condition$)))",
    "CoCoSpecCode": "(H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $stop_condition$) )) => $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (G $post_condition$))))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))) & ($regular_condition$ -> (($stop_condition$ V ($post_condition$ | $stop_condition$)) | (LAST V $post_condition$))))",
    "ptFinBtw": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) -> $post_condition$)))",
    "ptFinBtwExpanded": "(H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) -> $post_condition$)))",
    "CoCoSpecCodeFinBtw": "(H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $stop_condition$) )) => $post_condition$)))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
  },
  "null,regular,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "null,regular,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "null,regular,within,satisfaction": {
    "ft": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ftExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "pt": "(H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) & (! $post_condition$))) -> (O[<$duration$] (FTP | $post_condition$))))",
    "ptExpanded": "(H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) & (! $post_condition$))) -> (O[<$duration$] ((! (Y TRUE)) | $post_condition$))))",
    "CoCoSpecCode": "(H((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) and ( not $post_condition$)))) => (OT($duration$-1,0,(FTP or $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfAUExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfBtw": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftInfBtwExpanded": "((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] $post_condition$)))) & ($regular_condition$ -> (F[<=$duration$] $post_condition$)))",
    "ftFinBtw": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ftFinBtwExpanded": "((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST))))",
    "ptFinBtw": "(H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) & (! $post_condition$))) -> (O[<$duration$] (FTP | $post_condition$))))",
    "ptFinBtwExpanded": "(H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) & (! $post_condition$))) -> (O[<$duration$] ((! (Y TRUE)) | $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) and ( not $post_condition$)))) => (OT($duration$-1,0,(FTP or $post_condition$)))))",
    "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some point with distance <= $duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$). If the interval ends sooner than trigger+$duration$, then RES need not hold.",
    "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_within_satisfaction.svg"
  },
  "onlyAfter,null,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,after,satisfaction": {
    "ft": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] (FLin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[=$duration$+1] FTP) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$+1] FTP) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O $post_condition$)))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[=$duration$+1] (! (Y TRUE))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$+1] (! (Y TRUE))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O $post_condition$)))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$+1,$duration$+1,FTP)) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (O($post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((OT($duration$+1,$duration$+1,FTP)) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (O($post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "(((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[=$duration$+1] FTP) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O $post_condition$))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[=$duration$+1] (! (Y TRUE))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$+1,$duration$+1,FTP)) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (O($post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_after_satisfaction.svg"
  },
  "onlyAfter,null,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,always,satisfaction": {
    "ft": "((! (FLin_$scope_mode$ | LAST)) U (! $post_condition$))",
    "ftExpanded": "((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U (! $post_condition$))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (! (H $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (! (H $post_condition$))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (! (H $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (! (H $post_condition$))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre ( not (H($post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => ( not (H($post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((! FLin_$scope_mode$) U (! $post_condition$))",
    "ftInfAUExpanded": "((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((! FLin_$scope_mode$) U (! $post_condition$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((! FLin_$scope_mode$) U (! $post_condition$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (! (H $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (! (H $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre ( not (H($post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_always_satisfaction.svg"
  },
  "onlyAfter,null,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,before,satisfaction": {
    "ft": "((! (((! $stop_condition$) & (! (FLin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (FLin_$scope_mode$ | LAST))) & (! (FLin_$scope_mode$ | LAST))) U $post_condition$)))",
    "ftExpanded": "((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $post_condition$)))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $stop_condition$)) -> (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $stop_condition$)) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $stop_condition$)) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((H( not $stop_condition$)) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))",
    "ftInfAUExpanded": "((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $stop_condition$)) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs, RES can occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_before_satisfaction.svg"
  },
  "onlyAfter,null,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,eventually,satisfaction": {
    "ft": "((FLin_$scope_mode$ | LAST) V (! $post_condition$))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (! $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H( not $post_condition$))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V (! $post_condition$))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H( not $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_eventually_satisfaction.svg"
  },
  "onlyAfter,null,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,for,satisfaction": {
    "ft": "((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (FLin_$scope_mode$ | LAST)))",
    "ftExpanded": "((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H $post_condition$) -> (O[<$duration$] FTP)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H $post_condition$) -> (O[<$duration$] FTP)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H $post_condition$) -> (O[<$duration$] (! (Y TRUE)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H $post_condition$) -> (O[<$duration$] (! (Y TRUE)))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H($post_condition$)) => (OT($duration$-1,0,FTP))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((H($post_condition$)) => (OT($duration$-1,0,FTP))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))",
    "ftInfAUExpanded": "((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H $post_condition$) -> (O[<$duration$] FTP))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H $post_condition$) -> (O[<$duration$] (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H($post_condition$)) => (OT($duration$-1,0,FTP)))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_for_satisfaction.svg"
  },
  "onlyAfter,null,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,immediately,satisfaction": {
    "ft": "(! $post_condition$)",
    "ftExpanded": "(! $post_condition$)",
    "pt": "(H (FTP -> (! $post_condition$)))",
    "ptExpanded": "(H ((! (Y TRUE)) -> (! $post_condition$)))",
    "CoCoSpecCode": "(H(FTP => ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(! $post_condition$)",
    "ftInfAUExpanded": "(! $post_condition$)",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (! $post_condition$))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! $post_condition$))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (! $post_condition$))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! $post_condition$))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (FTP -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((! (Y TRUE)) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H(FTP => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_immediately_satisfaction.svg"
  },
  "onlyAfter,null,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,never,satisfaction": {
    "ft": "((! (FLin_$scope_mode$ | LAST)) U $post_condition$)",
    "ftExpanded": "((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$)))) & ((H (! FLin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (O($post_condition$))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((! FLin_$scope_mode$) U $post_condition$)",
    "ftInfAUExpanded": "((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((! FLin_$scope_mode$) U $post_condition$))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((! FLin_$scope_mode$) U $post_condition$))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (O($post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_never_satisfaction.svg"
  },
  "onlyAfter,null,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,next,satisfaction": {
    "ft": "((FLin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((Y FTP) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((Y FTP) -> (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((Y (! (Y TRUE))) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((Y (! (Y TRUE))) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((pre (FTP)) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((pre (FTP)) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((Y FTP) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((Y (! (Y TRUE))) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((pre (FTP)) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_next_satisfaction.svg"
  },
  "onlyAfter,null,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,null,satisfaction": {
    "ft": "((FLin_$scope_mode$ | LAST) V (! $post_condition$))",
    "ftExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (! $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H( not $post_condition$))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(FLin_$scope_mode$ V (! $post_condition$))",
    "ftInfAUExpanded": "((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H( not $post_condition$)))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_null_satisfaction.svg"
  },
  "onlyAfter,null,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,until,satisfaction": {
    "ft": "(! (((! ((! $stop_condition$) & ((! $post_condition$) | (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))) U $stop_condition$))",
    "ftExpanded": "(! (((! ((! $stop_condition$) & ((! $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((! FTP) & (Y (! (H $post_condition$))))))))) & ((H (! FLin_$scope_mode$)) -> (H ($stop_condition$ -> ((! FTP) & (Y (! (H $post_condition$))))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((Y TRUE) & (Y (! (H $post_condition$))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ($stop_condition$ -> ((Y TRUE) & (Y (! (H $post_condition$))))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H($stop_condition$ => (( not FTP) and (pre ( not (H($post_condition$)))))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H($stop_condition$ => (( not FTP) and (pre ( not (H($post_condition$)))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))",
    "ftInfAUExpanded": "(! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((! FTP) & (Y (! (H $post_condition$)))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((Y TRUE) & (Y (! (H $post_condition$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H($stop_condition$ => (( not FTP) and (pre ( not (H($post_condition$))))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds, or the end of the interval if the stop condition never holds.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_until_satisfaction.svg"
  },
  "onlyAfter,null,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,null,within,satisfaction": {
    "ft": "((G[<=$duration$] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$)))",
    "ftExpanded": "((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$)))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] FTP) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[<=$duration$] FTP) -> (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$,0,FTP)) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((OT($duration$,0,FTP)) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))",
    "ftInfAUExpanded": "((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] FTP) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$,0,FTP)) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_null_within_satisfaction.svg"
  },
  "onlyAfter,only,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,after,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[=$duration$+1] FTP) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$+1] FTP) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O $post_condition$)))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[=$duration$+1] (! (Y TRUE))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$+1] (! (Y TRUE))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O $post_condition$)))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$+1,$duration$+1,FTP)) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (O($post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((OT($duration$+1,$duration$+1,FTP)) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (O($post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[=$duration$+1] FTP) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O $post_condition$))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[=$duration$+1] (! (Y TRUE))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$+1,$duration$+1,FTP)) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (O($post_condition$)))))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,always,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (! (H $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (! (H $post_condition$))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (! (H $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (! (H $post_condition$))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre ( not (H($post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => ( not (H($post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (! (H $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (! (H $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre ( not (H($post_condition$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,before,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $stop_condition$)) -> (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $stop_condition$)) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $stop_condition$)) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((H( not $stop_condition$)) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $stop_condition$)) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $stop_condition$)) => ( not $post_condition$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,eventually,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (! $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H( not $post_condition$))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H( not $post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,for,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H $post_condition$) -> (O[<$duration$] FTP)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H $post_condition$) -> (O[<$duration$] FTP)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H $post_condition$) -> (O[<$duration$] (! (Y TRUE)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H $post_condition$) -> (O[<$duration$] (! (Y TRUE)))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H($post_condition$)) => (OT($duration$-1,0,FTP))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((H($post_condition$)) => (OT($duration$-1,0,FTP))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H $post_condition$) -> (O[<$duration$] FTP))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H $post_condition$) -> (O[<$duration$] (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H($post_condition$)) => (OT($duration$-1,0,FTP)))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,immediately,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (FTP -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H (FTP -> (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((! (Y TRUE)) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((! (Y TRUE)) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H(FTP => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H(FTP => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (FTP -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((! (Y TRUE)) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H(FTP => ( not $post_condition$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,never,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$)))) & ((H (! FLin_$scope_mode$)) -> (O $post_condition$)))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (O $post_condition$)))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (O $post_condition$)))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (O($post_condition$))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (O($post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (O $post_condition$))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (O $post_condition$))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (O($post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,next,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((Y FTP) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((Y FTP) -> (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((Y (! (Y TRUE))) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((Y (! (Y TRUE))) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((pre (FTP)) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((pre (FTP)) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((Y FTP) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((Y (! (Y TRUE))) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((pre (FTP)) => ( not $post_condition$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,null,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$))))) & ((H (! FLin_$scope_mode$)) -> (H (! $post_condition$))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (! $post_condition$))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H (! $post_condition$))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H( not $post_condition$))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H( not $post_condition$))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (! $post_condition$)))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (! $post_condition$)))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H( not $post_condition$)))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,until,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((! FTP) & (Y (! (H $post_condition$))))))))) & ((H (! FLin_$scope_mode$)) -> (H ($stop_condition$ -> ((! FTP) & (Y (! (H $post_condition$))))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((Y TRUE) & (Y (! (H $post_condition$))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ($stop_condition$ -> ((Y TRUE) & (Y (! (H $post_condition$))))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H($stop_condition$ => (( not FTP) and (pre ( not (H($post_condition$)))))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H($stop_condition$ => (( not FTP) and (pre ( not (H($post_condition$)))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((! FTP) & (Y (! (H $post_condition$)))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((Y TRUE) & (Y (! (H $post_condition$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H($stop_condition$ => (( not FTP) and (pre ( not (H($post_condition$))))))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,only,within,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] FTP) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[<=$duration$] FTP) -> (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$,0,FTP)) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((OT($duration$,0,FTP)) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] FTP) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] (! (Y TRUE))) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$,0,FTP)) => ( not $post_condition$))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,after,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (FLin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (FLin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$+1,$duration$+1,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (OT($duration$,0,$post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((OT($duration$+1,$duration$+1,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (OT($duration$,0,$post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] FLin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) | ((G[<=$duration$+1] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> (((O[<=$duration$] FTP) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> (((O[<=$duration$] (! (Y TRUE))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$+1,$duration$+1,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => (((OT($duration$,0,FTP)) or ( not $post_condition$)) or (pre (OT($duration$,0,$post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_after_satisfaction.svg"
  },
  "onlyAfter,regular,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,always,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((! (FLin_$scope_mode$ | LAST)) U (! $post_condition$))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (FLin_$scope_mode$ | LAST)) U (! $post_condition$))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U (! $post_condition$))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))) & ((H (! FLin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), $post_condition$ ))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), $post_condition$ ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! FLin_$scope_mode$) U (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! FLin_$scope_mode$) U (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((! FLin_$scope_mode$) U (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U (! $post_condition$)))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), $post_condition$ )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_always_satisfaction.svg"
  },
  "onlyAfter,regular,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,before,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,before,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,before,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (FLin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (FLin_$scope_mode$ | LAST))) & (! (FLin_$scope_mode$ | LAST))) U $post_condition$)))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (FLin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (FLin_$scope_mode$ | LAST))) & (! (FLin_$scope_mode$ | LAST))) U $post_condition$)))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $post_condition$)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $post_condition$)))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) -> (! $post_condition$))))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) -> (! $post_condition$))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) -> (! $post_condition$))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) -> (! $post_condition$))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! FLin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & FLin_$scope_mode$)) & (! FLin_$scope_mode$)) U $post_condition$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $post_condition$))))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) -> (! $post_condition$)))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) -> (! $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$)))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs, RES can occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_before_satisfaction.svg"
  },
  "onlyAfter,regular,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,eventually,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((FLin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_eventually_satisfaction.svg"
  },
  "onlyAfter,regular,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,for,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,for,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,for,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (FLin_$scope_mode$ | LAST)))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) & $post_condition$)) -> (O[<$duration$] (FTP | (! $post_condition$)))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) & $post_condition$)) -> (O[<$duration$] (FTP | (! $post_condition$)))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) & $post_condition$)) -> (O[<$duration$] ((! (Y TRUE)) | (! $post_condition$)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) & $post_condition$)) -> (O[<$duration$] ((! (Y TRUE)) | (! $post_condition$)))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) and $post_condition$))) => (OT($duration$-1,0,(FTP or ( not $post_condition$))))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) and $post_condition$))) => (OT($duration$-1,0,(FTP or ( not $post_condition$))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] FLin_$scope_mode$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) & $post_condition$)) -> (O[<$duration$] (FTP | (! $post_condition$))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) & $post_condition$)) -> (O[<$duration$] ((! (Y TRUE)) | (! $post_condition$))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) and $post_condition$))) => (OT($duration$-1,0,(FTP or ( not $post_condition$)))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_for_satisfaction.svg"
  },
  "onlyAfter,regular,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,immediately,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! $post_condition$)))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (! $post_condition$)))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) -> (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) -> (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) -> (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) -> (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) => ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) => ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$)))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! $post_condition$))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H (($regular_condition$ & ((Y (! $regular_condition$)) | FTP)) -> (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H (($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))) -> (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H(($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)) => ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_immediately_satisfaction.svg"
  },
  "onlyAfter,regular,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,never,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((! (FLin_$scope_mode$ | LAST)) U $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (FLin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)) U $post_condition$)))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))) & ((H (! FLin_$scope_mode$)) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! FLin_$scope_mode$) U $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((! FLin_$scope_mode$) U $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((! FLin_$scope_mode$) U $post_condition$)) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((! FLin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) U $post_condition$))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y ((H (! $regular_condition$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre ((H( not $regular_condition$)) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_never_satisfaction.svg"
  },
  "onlyAfter,regular,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,next,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,next,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,next,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((FLin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (FLin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) | ((X (! $post_condition$)) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((! $post_condition$) | FTP)))))) & ((H (! FLin_$scope_mode$)) -> (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((! $post_condition$) | FTP)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((! $post_condition$) | (! (Y TRUE)))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((! $post_condition$) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP))) => (( not $post_condition$) or FTP)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP))) => (( not $post_condition$) or FTP)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ | ((X (! $post_condition$)) & (! FLin_$scope_mode$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | ((X (! $post_condition$)) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((! $post_condition$) | FTP))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((! $post_condition$) | (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP))) => (( not $post_condition$) or FTP))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_next_satisfaction.svg"
  },
  "onlyAfter,regular,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,null,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,null,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,null,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((FLin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((FLin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! FLin_$scope_mode$)) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$)))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((H (! $regular_condition$)) | (! $post_condition$)))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ( not $post_condition$)))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((H( not $regular_condition$)) or ( not $post_condition$)))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (FLin_$scope_mode$ V (! $post_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_null_satisfaction.svg"
  },
  "onlyAfter,regular,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,until,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,until,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,until,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (FLin_$scope_mode$ | LAST)))) & (! (FLin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))) U $stop_condition$))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((! FTP) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))))))) & ((H (! FLin_$scope_mode$)) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((! FTP) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))))))))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))))))))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H($stop_condition$ => ((H( not $regular_condition$)) or ((( not FTP) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), $post_condition$ ))))))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H($stop_condition$ => ((H( not $regular_condition$)) or ((( not FTP) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), $post_condition$ ))))))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | FLin_$scope_mode$))) & (! FLin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))) U $stop_condition$)))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((! FTP) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FTP)))))))))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ($stop_condition$ -> ((H (! $regular_condition$)) | (((Y TRUE) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE)))))))))))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H($stop_condition$ => ((H( not $regular_condition$)) or ((( not FTP) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)), $post_condition$ )))))))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds, or the end of the interval if the stop condition never holds.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_until_satisfaction.svg"
  },
  "onlyAfter,regular,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyAfter,regular,within,satisfaction": {
    "ft": "(((FLin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (FLin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$)))) & (! (FLin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((FLin_$scope_mode$ | LAST) V (! $post_condition$)))))",
    "ftExpanded": "((((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$)))) & (! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) | LAST) V (! $post_condition$)))))",
    "pt": "((H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | (! $post_condition$))))))) & ((H (! FLin_$scope_mode$)) -> (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "ptExpanded": "((H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | (! $post_condition$))))))) & ((H (! (((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))))) -> (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | (! $post_condition$))))))",
    "CoCoSpecCode": "((H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or ( not $post_condition$))))))) and ((H( not ((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))))) => (H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or ( not $post_condition$))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfAUExpanded": "(((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))))",
    "ftInfBtw": "((F FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! FLin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfBtwExpanded": "((F (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ftFinBtw": "(((! LAST) U FLin_$scope_mode$) -> ((FLin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! FLin_$scope_mode$)))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$)))) & (! FLin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (FLin_$scope_mode$ V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! LAST) U (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) -> (((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$)))) & (! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$))))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) V (! $post_condition$))))))",
    "ptFinBtw": "(H ((FLin_$scope_mode$ & (! FTP)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FTP))) -> ((H (! $regular_condition$)) | (! $post_condition$)))))))",
    "ptFinBtwExpanded": "(H (((((! $scope_mode$) & (Y $scope_mode$)) & (Y (H (! ((! $scope_mode$) & (Y $scope_mode$)))))) & (Y TRUE)) -> (Y (H ((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (! (Y TRUE))))) -> ((H (! $regular_condition$)) | (! $post_condition$)))))))",
    "CoCoSpecCodeFinBtw": "(H((((( not $scope_mode$) and (pre ($scope_mode$))) and pre (H( not (( not $scope_mode$) and (pre ($scope_mode$)))))) and ( not FTP)) => (pre (H((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or FTP)))) => ((H( not $regular_condition$)) or ( not $post_condition$)))))))",
    "description": "ENFORCED: in the interval (if defined) from the start of the execution to (and including) the first interval where $scope_mode$ holds.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyAfter_regular_within_satisfaction.svg"
  },
  "onlyBefore,null,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,after,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) S (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[=$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) S (((O[=$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (pre ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) S (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[=$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) S (((O[=$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (pre ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_after_satisfaction.svg"
  },
  "onlyBefore,null,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,always,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((! LAST) U (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((! LAST) U (! $post_condition$))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((! LAST) U (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((! LAST) U (! $post_condition$))))",
    "pt": "((O FFin_$scope_mode$) -> (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$))))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((! LAST) U (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((! LAST) U (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((! LAST) U (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((! LAST) U (! $post_condition$))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ ))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_always_satisfaction.svg"
  },
  "onlyBefore,null,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,before,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs, RES can occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_before_satisfaction.svg"
  },
  "onlyBefore,null,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,eventually,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "pt": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_eventually_satisfaction.svg"
  },
  "onlyBefore,null,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,for,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))",
    "pt": "((O FFin_$scope_mode$) -> ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) S ((($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ )) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F[<=$duration$] (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F[<=$duration$] (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F[<=$duration$] (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F[<=$duration$] (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F[<=$duration$] (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F[<=$duration$] (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F[<=$duration$] (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F[<=$duration$] (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) S ((($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ )) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_for_satisfaction.svg"
  },
  "onlyBefore,null,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,immediately,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! $post_condition$)))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! $post_condition$)))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! $post_condition$)))",
    "pt": "((O FFin_$scope_mode$) -> ((FFin_$scope_mode$ -> (! $post_condition$)) S ((FFin_$scope_mode$ -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) -> (! $post_condition$)) S (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! $post_condition$)))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! $post_condition$)))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! $post_condition$)))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! $post_condition$)))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! $post_condition$)))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! $post_condition$)))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! $post_condition$)))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! $post_condition$)))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((FFin_$scope_mode$ -> (! $post_condition$)) S ((FFin_$scope_mode$ -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) -> (! $post_condition$)) S (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_immediately_satisfaction.svg"
  },
  "onlyBefore,null,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,never,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((! LAST) U $post_condition$)))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((! LAST) U $post_condition$)))",
    "pt": "((O FFin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$))))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F $post_condition$)))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F $post_condition$)))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F $post_condition$)))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (F $post_condition$)))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (F $post_condition$)))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (F $post_condition$)))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (F $post_condition$)))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((! LAST) U $post_condition$)))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((! LAST) U $post_condition$)))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((! LAST) U $post_condition$)))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((! LAST) U $post_condition$)))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) ))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_never_satisfaction.svg"
  },
  "onlyBefore,null,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,next,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST | (X (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST | (X (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST | (X (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST | (X (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (((Y FFin_$scope_mode$) -> (! $post_condition$)) S (((Y FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((Y (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) S (((Y (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((pre (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (X (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (X (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (X (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (X (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (X (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (X (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (X (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (X (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST | (X (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST | (X (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST | (X (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST | (X (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((Y FFin_$scope_mode$) -> (! $post_condition$)) S (((Y FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((Y (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) S (((Y (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((pre (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_next_satisfaction.svg"
  },
  "onlyBefore,null,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,null,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "pt": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (G (! $post_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (G (! $post_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (G (! $post_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (LAST V (! $post_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (LAST V (! $post_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (LAST V (! $post_condition$))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_null_satisfaction.svg"
  },
  "onlyBefore,null,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,until,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))",
    "pt": "((O FFin_$scope_mode$) -> (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) S (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (($stop_condition$ -> ((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) S (($stop_condition$ -> ((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ($stop_condition$ => (( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) and (pre ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! ($post_condition$ U $stop_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! ($post_condition$ U $stop_condition$))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! ($post_condition$ U $stop_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! ($post_condition$ U $stop_condition$))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (! ($post_condition$ U $stop_condition$))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> (! ($post_condition$ U $stop_condition$))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (! ($post_condition$ U $stop_condition$))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (! ($post_condition$ U $stop_condition$))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) S (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (($stop_condition$ -> ((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) S (($stop_condition$ -> ((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ($stop_condition$ => (( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) and (pre ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ )))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds, or the end of the interval if the stop condition never holds.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_until_satisfaction.svg"
  },
  "onlyBefore,null,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,null,within,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) S (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) S (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_null_within_satisfaction.svg"
  },
  "onlyBefore,only,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,after,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) S (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[=$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) S (((O[=$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (pre ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) S (((O[=$duration$+1] FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[=$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) S (((O[=$duration$+1] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (pre ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))))) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,always,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$))))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ ))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,before,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $stop_condition$) )) => ( not $post_condition$)) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,eventually,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,for,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) S ((($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ )) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FFin_$scope_mode$)) -> (O[<$duration$] FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) S ((($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (O[<$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ )) => (OT($duration$-1,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))))) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,immediately,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> ((FFin_$scope_mode$ -> (! $post_condition$)) S ((FFin_$scope_mode$ -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) -> (! $post_condition$)) S (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((FFin_$scope_mode$ -> (! $post_condition$)) S ((FFin_$scope_mode$ -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) -> (! $post_condition$)) S (((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) => ( not $post_condition$)) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,never,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$))))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (! ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) ))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,next,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> (((Y FFin_$scope_mode$) -> (! $post_condition$)) S (((Y FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((Y (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) S (((Y (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((pre (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((Y FFin_$scope_mode$) -> (! $post_condition$)) S (((Y FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((Y (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) S (((Y (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((pre (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ( not $post_condition$)) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,null,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((! $post_condition$) S ((! $post_condition$) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((! $post_condition$) S ((! $post_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $post_condition$) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,until,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) S (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (($stop_condition$ -> ((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) S (($stop_condition$ -> ((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ($stop_condition$ => (( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) and (pre ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ )))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) S (($stop_condition$ -> ((! FFin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FFin_$scope_mode$)))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (($stop_condition$ -> ((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) S (($stop_condition$ -> ((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (Y (! ($post_condition$ S ($post_condition$ & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ($stop_condition$ => (( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) and (pre ( not (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), $post_condition$ )))))) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,only,within,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((O FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) S (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FFin_$scope_mode$) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) S (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,after,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (pre (OT($duration$,0,$post_condition$))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))) & ($regular_condition$ -> ((F[<=$duration$] $post_condition$) | ((G[<=$duration$+1] (! $post_condition$)) | (G (! $post_condition$))))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LAST)) | ((G[<=$duration$+1] (! $post_condition$)) | (LAST V (! $post_condition$))))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((O[<=$duration$] FFin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> (((O[<=$duration$] (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))))) => (((OT($duration$,0,(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) or ( not $post_condition$)) or (pre (OT($duration$,0,$post_condition$))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_after_satisfaction.svg"
  },
  "onlyBefore,regular,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,always,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))))))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))), $post_condition$ )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F (! $post_condition$))))) & ($regular_condition$ -> (F (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U (! $post_condition$))))) & ($regular_condition$ -> ((! LAST) U (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))), $post_condition$ )))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_always_satisfaction.svg"
  },
  "onlyBefore,regular,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,before,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,before,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,before,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) -> (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))) -> (! $post_condition$))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))), ( not $stop_condition$) )) => ( not $post_condition$))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (! (F $post_condition$)))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> (($stop_condition$ V (! ($post_condition$ & (! $stop_condition$)))) | (LAST V (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) -> (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))) -> (! $post_condition$))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))), ( not $stop_condition$) )) => ( not $post_condition$))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs, RES can occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_before_satisfaction.svg"
  },
  "onlyBefore,regular,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,eventually,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_eventually_satisfaction.svg"
  },
  "onlyBefore,regular,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,for,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,for,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,for,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) | (! $post_condition$)))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) and $post_condition$))) => (OT($duration$-1,0,((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) or ( not $post_condition$))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F[<=$duration$] (! $post_condition$))))) & ($regular_condition$ -> (F[<=$duration$] (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LAST))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FFin_$scope_mode$ | (! $post_condition$)))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & $post_condition$)) -> (O[<$duration$] ((($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))) | (! $post_condition$)))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) and $post_condition$))) => (OT($duration$-1,0,((($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)) or ( not $post_condition$))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_for_satisfaction.svg"
  },
  "onlyBefore,regular,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,immediately,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), (($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (! $post_condition$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)) -> (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) -> (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), (($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) => ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_immediately_satisfaction.svg"
  },
  "onlyBefore,regular,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,never,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "pt": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))))))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (F $post_condition$)))) & ($regular_condition$ -> (F $post_condition$)))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((! LAST) U $post_condition$)))) & ($regular_condition$ -> ((! LAST) U $post_condition$)))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))))))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_never_satisfaction.svg"
  },
  "onlyBefore,regular,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,next,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,next,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,next,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> ((! $post_condition$) | FFin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> ((! $post_condition$) | FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> ((! $post_condition$) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> ((! $post_condition$) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))))) => (( not $post_condition$) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (X (! $post_condition$))))) & ($regular_condition$ -> (X (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST | (X (! $post_condition$)))))) & ($regular_condition$ -> (LAST | (X (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> ((! $post_condition$) | FFin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> ((! $post_condition$) | FFin_$scope_mode$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> ((! $post_condition$) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> ((! $post_condition$) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))))) => (( not $post_condition$) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_next_satisfaction.svg"
  },
  "onlyBefore,regular,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,null,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,null,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,null,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (G (! $post_condition$))))) & ($regular_condition$ -> (G (! $post_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (LAST V (! $post_condition$))))) & ($regular_condition$ -> (LAST V (! $post_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$)) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$)) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$)) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_null_satisfaction.svg"
  },
  "onlyBefore,regular,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,until,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,until,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,until,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "pt": "((O FFin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))))))))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ($stop_condition$ => ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))), $post_condition$ ))))))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X (! ($post_condition$ U $stop_condition$))))) & ($regular_condition$ -> (! ($post_condition$ U $stop_condition$))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X (((! $post_condition$) | LAST) V (! $stop_condition$))))) & ($regular_condition$ -> (((! $post_condition$) | LAST) V (! $stop_condition$))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (((! FFin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))))))))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (((! (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))))))))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ($stop_condition$ => ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ((( not (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))), $post_condition$ ))))))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds, or the end of the interval if the stop condition never holds.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_until_satisfaction.svg"
  },
  "onlyBefore,regular,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyBefore,regular,within,satisfaction": {
    "ft": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ftExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "pt": "((O FFin_$scope_mode$) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCode": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))))) => ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$))) )))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfAUExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftInfBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))) | (G (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((G (((! $regular_condition$) & (X $regular_condition$)) -> (X ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (G (! $post_condition$)))))))",
    "ftFinBtw": "(((! $scope_mode$) -> (((! FFin_$scope_mode$) U (FFin_$scope_mode$ & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! FFin_$scope_mode$)))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "(((! $scope_mode$) -> (((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) & (X ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))) | (LAST V (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($scope_mode$ -> ((LAST V (((! $regular_condition$) & ((! LAST) & (X $regular_condition$))) -> (X ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LAST V (! $post_condition$)))))))",
    "ptFinBtw": "((O FFin_$scope_mode$) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FFin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FFin_$scope_mode$)) | (! $post_condition$))) & FFin_$scope_mode$)))",
    "ptFinBtwExpanded": "((O (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE))))))) -> (((! $regular_condition$) S ((! $regular_condition$) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))) | (! $post_condition$))) & (($scope_mode$ & ((! (Y TRUE)) | (Y (! $scope_mode$)))) & ((Y (H (! $scope_mode$))) | (! (Y TRUE)))))))",
    "CoCoSpecCodeFinBtw": "((O(($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP))) => (SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)))))) => ((SI( (($scope_mode$ and (FTP or (pre ( not $scope_mode$)))) and ((pre (H( not $scope_mode$))) or FTP)), ( not $regular_condition$) )) or ( not $post_condition$))) )))",
    "description": "ENFORCED: in the interval (if defined) starting at the first point where $scope_mode$ holds and spanning to the end of the execution.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyBefore_regular_within_satisfaction.svg"
  },
  "onlyIn,null,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,after,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_after_satisfaction.svg"
  },
  "onlyIn,null,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,always,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))) & ((! $scope_mode$) -> ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))) & ((! $scope_mode$) -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! LNin_$scope_mode$) U (! $post_condition$))))) & ((! $scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))) & ((! $scope_mode$) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_always_satisfaction.svg"
  },
  "onlyIn,null,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,before,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))) & ((! $scope_mode$) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs, RES can occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_before_satisfaction.svg"
  },
  "onlyIn,null,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,eventually,satisfaction": {
    "ft": "(LAST V ($post_condition$ -> $scope_mode$))",
    "ftExpanded": "(LAST V ($post_condition$ -> $scope_mode$))",
    "pt": "(H ($post_condition$ -> $scope_mode$))",
    "ptExpanded": "(H ($post_condition$ -> $scope_mode$))",
    "CoCoSpecCode": "(H($post_condition$ => $scope_mode$))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "(G ($post_condition$ -> $scope_mode$))",
    "ftInfAUExpanded": "(G ($post_condition$ -> $scope_mode$))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_eventually_satisfaction.svg"
  },
  "onlyIn,null,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,for,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))) & ((! $scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))) & ((! $scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))) & ((! $scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))) & ((! $scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_for_satisfaction.svg"
  },
  "onlyIn,null,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,immediately,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (! $post_condition$)))) & ((! $scope_mode$) -> (! $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (! $post_condition$)))) & ((! $scope_mode$) -> (! $post_condition$)))",
    "pt": "(H (FNin_$scope_mode$ -> (! $post_condition$)))",
    "ptExpanded": "(H (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)))",
    "CoCoSpecCode": "(H((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => ( not $post_condition$)))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (! $post_condition$)))) & ((! $scope_mode$) -> (! $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (! $post_condition$)))) & ((! $scope_mode$) -> (! $post_condition$)))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (! $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (! $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (! $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (! $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! $post_condition$))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((FNin_$scope_mode$ -> (! $post_condition$)) S ((FNin_$scope_mode$ -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)) S ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_immediately_satisfaction.svg"
  },
  "onlyIn,null,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,never,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))) & ((! $scope_mode$) -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((! LNin_$scope_mode$) U $post_condition$)))) & ((! $scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$)))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))) & ((! $scope_mode$) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((! LNin_$scope_mode$) U $post_condition$))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_never_satisfaction.svg"
  },
  "onlyIn,null,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,next,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_next_satisfaction.svg"
  },
  "onlyIn,null,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,null,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (LNin_$scope_mode$ V (! $post_condition$))))) & ((! $scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & ((! $scope_mode$) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_null_satisfaction.svg"
  },
  "onlyIn,null,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,until,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))) & ((! $scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds, or the end of the interval if the stop condition never holds.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_until_satisfaction.svg"
  },
  "onlyIn,null,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,null,within,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))) & ((! $scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))) & ((! $scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_null_within_satisfaction.svg"
  },
  "onlyIn,only,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,after,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,after,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,after,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) S (((O[=$duration$+1] FNin_$scope_mode$) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (((O[=$duration$+1] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,always,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ ))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,before,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,before,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,before,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((((! $stop_condition$) S ((! $stop_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $stop_condition$) )) => ( not $post_condition$)) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,eventually,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,for,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,for,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,for,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) S ((($post_condition$ S ($post_condition$ & FNin_$scope_mode$)) -> (O[<$duration$] FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S ((($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (O[<$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )) => (OT($duration$-1,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,immediately,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((FNin_$scope_mode$ -> (! $post_condition$)) S ((FNin_$scope_mode$ -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((FNin_$scope_mode$ -> (! $post_condition$)) S ((FNin_$scope_mode$ -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)) S ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)) S ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((FNin_$scope_mode$ -> (! $post_condition$)) S ((FNin_$scope_mode$ -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)) S ((((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) => ( not $post_condition$)) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,never,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (! ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,next,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,next,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,next,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y FNin_$scope_mode$) -> (! $post_condition$)) S (((Y FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((Y ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) => ( not $post_condition$)) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,null,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,null,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,null,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((! $post_condition$) S ((! $post_condition$) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((! $post_condition$) S ((! $post_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $post_condition$) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,until,not_order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,until,order": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,until,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) S (($stop_condition$ -> ((! FNin_$scope_mode$) & (Y (! ($post_condition$ S ($post_condition$ & FNin_$scope_mode$)))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) S (($stop_condition$ -> ((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => (( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and (pre ( not (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), $post_condition$ )))))) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,only,within,satisfaction": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) S (((O[<=$duration$] FNin_$scope_mode$) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) S (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )))))",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,after,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,after,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,after,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,after,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (LNin_$scope_mode$ | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) | ((G[<=$duration$+1] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre (OT($duration$,0,$post_condition$))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre (OT($duration$,0,$post_condition$))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] LNin_$scope_mode$)) | ((G[<=$duration$+1] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (((F[<=$duration$] $post_condition$) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) | ((G[<=$duration$+1] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((O[<=$duration$] FNin_$scope_mode$) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) S (((O[=$duration$+1] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((O[<=$duration$] ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) | (! $post_condition$)) | (Y (O[<=$duration$] $post_condition$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$+1,$duration$+1,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => (((OT($duration$,0,(( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) or ( not $post_condition$)) or (pre (OT($duration$,0,$post_condition$))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must either hold at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), or RES must remain false for $duration$+1 time points starting at the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$+1), or to the end of the interval if it ends sooner than trigger+$duration$+1.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_after_satisfaction.svg"
  },
  "onlyIn,regular,always,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,always,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,always,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,always,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U (! $post_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), $post_condition$ ))))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), $post_condition$ ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U (! $post_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), $post_condition$ )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_always_satisfaction.svg"
  },
  "onlyIn,regular,before,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,before,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,before,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,before,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (LNin_$scope_mode$ | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (LNin_$scope_mode$ | LAST))) & (! (LNin_$scope_mode$ | LAST))) U $post_condition$)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $post_condition$)))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $stop_condition$) )) => ( not $post_condition$))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $stop_condition$) )) => ( not $post_condition$))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! LNin_$scope_mode$)) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & LNin_$scope_mode$)) & (! LNin_$scope_mode$)) U $post_condition$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $stop_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U ($post_condition$ & (! $stop_condition$)))) | (! (((! ((! $post_condition$) & (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $post_condition$))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) -> (! $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> (! $post_condition$))) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! $stop_condition$) S ((! $stop_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) -> (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $stop_condition$) )) => ( not $post_condition$))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false until, but not necessarily including, the state where the stop condition holds. If the stop condition never occurs, RES can occur.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_before_satisfaction.svg"
  },
  "onlyIn,regular,eventually,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,eventually,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,eventually,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,eventually,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_eventually_satisfaction.svg"
  },
  "onlyIn,regular,for,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,for,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,for,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,for,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (LNin_$scope_mode$ | LAST)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | (! $post_condition$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | (! $post_condition$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or ( not $post_condition$))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or ( not $post_condition$))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] LNin_$scope_mode$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((F[<=$duration$] (! $post_condition$)) | (F[<$duration$] (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) & $post_condition$)) -> (O[<$duration$] (FNin_$scope_mode$ | (! $post_condition$)))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | (! $post_condition$)))) S (((O[=$duration$] (($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & $post_condition$)) -> (O[<$duration$] (((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))) | (! $post_condition$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,$duration$,(($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) and $post_condition$))) => (OT($duration$-1,0,((( not $scope_mode$) and (FTP or (pre ($scope_mode$)))) or ( not $post_condition$))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at some point with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., or trigger+$duration$), except if the end of the interval occurs sooner.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_for_satisfaction.svg"
  },
  "onlyIn,regular,immediately,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,immediately,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,immediately,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,immediately,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! $post_condition$)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! $post_condition$))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)) -> (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) S ((($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), (($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) => ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, trigger and RES cannot hold at the same time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_immediately_satisfaction.svg"
  },
  "onlyIn,regular,never,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,never,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,never,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,never,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((! (LNin_$scope_mode$ | LAST)) U $post_condition$)))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)) U $post_condition$)))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) ))))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$)))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((! LNin_$scope_mode$) U $post_condition$)) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((! LNin_$scope_mode$) U $post_condition$))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) U $post_condition$))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))))))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! ((! $post_condition$) S ((! $post_condition$) & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), ( not $post_condition$) )))))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must hold at some time point between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_never_satisfaction.svg"
  },
  "onlyIn,regular,next,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,next,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,next,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,next,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) | ((X (! $post_condition$)) & (! (LNin_$scope_mode$ | LAST))))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) | ((X (! $post_condition$)) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ((! $post_condition$) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ((! $post_condition$) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ((! $post_condition$) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ((! $post_condition$) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ | ((X (! $post_condition$)) & (! LNin_$scope_mode$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | ((X (! $post_condition$)) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> ((! $post_condition$) | FNin_$scope_mode$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ((! $post_condition$) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) S (((Y ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> ((! $post_condition$) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((pre ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))))) => (( not $post_condition$) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES cannot hold at the next time point.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_next_satisfaction.svg"
  },
  "onlyIn,regular,null,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,null,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,null,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,null,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((LNin_$scope_mode$ | LAST) V (! $post_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((LNin_$scope_mode$ | LAST) V (! $post_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (LNin_$scope_mode$ V (! $post_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$)) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) S ((((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$)) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$)) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points between (and including) the trigger and the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_null_satisfaction.svg"
  },
  "onlyIn,regular,until,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,until,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,until,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,until,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (LNin_$scope_mode$ | LAST)))) & (! (LNin_$scope_mode$ | LAST))) U $stop_condition$))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))) U $stop_condition$))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), $post_condition$ ))))))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), $post_condition$ ))))))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | LNin_$scope_mode$))) & (! LNin_$scope_mode$)) U $stop_condition$)))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> (! (((! ((! $stop_condition$) & ((! $post_condition$) | (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))) U $stop_condition$)))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (((! FNin_$scope_mode$) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$)))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))))))))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) S (($stop_condition$ -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (((! ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))) & (! ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))) & (Y (! ($post_condition$ S ($post_condition$ & ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))))))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ($stop_condition$ => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ((( not (( not $scope_mode$) and (FTP or (pre ($scope_mode$))))) and ( not ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) and (pre ( not (SI( ($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))), $post_condition$ ))))))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at least once strictly before the state where the stop condition holds, or the end of the interval if the stop condition never holds.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_until_satisfaction.svg"
  },
  "onlyIn,regular,within,action": {
    "ft": "Under construction.",
    "ftExpanded": "Under construction.",
    "pt": "Under construction.",
    "ptExpanded": "Under construction.",
    "CoCoSpecCode": "Under construction.",
    "R2U2Code": "Under construction.",
    "ftInfAU": "Under construction.",
    "ftInfAUExpanded": "Under construction.",
    "ftInfBtw": "Under construction.",
    "ftInfBtwExpanded": "Under construction.",
    "ftFinBtw": "Under construction.",
    "ftFinBtwExpanded": "Under construction.",
    "ptFinBtw": "Under construction.",
    "ptFinBtwExpanded": "Under construction.",
    "CoCoSpecCodeFinBtw": "Under construction.",
    "description": "We are working on adding a description for this requirement. In the meanwhile, you can see its intended meaning in the diagram provided.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,within,not_order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,within,order": {
    "ft": "No meaning assigned.",
    "ftExpanded": "No meaning assigned.",
    "pt": "No meaning assigned.",
    "ptExpanded": "No meaning assigned.",
    "CoCoSpecCode": "No meaning assigned.",
    "R2U2Code": "No meaning assigned.",
    "ftInfAU": "No meaning assigned.",
    "ftInfAUExpanded": "No meaning assigned.",
    "ftInfBtw": "No meaning assigned.",
    "ftInfBtwExpanded": "No meaning assigned.",
    "ftFinBtw": "No meaning assigned.",
    "ftFinBtwExpanded": "No meaning assigned.",
    "ptFinBtw": "No meaning assigned.",
    "ptFinBtwExpanded": "No meaning assigned.",
    "CoCoSpecCodeFinBtw": "No meaning assigned.",
    "description": "Unclear requirement. We are not sure how to interpret this requirement.",
    "diagram": "Undefined svg."
  },
  "onlyIn,regular,within,satisfaction": {
    "ft": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((LNin_$scope_mode$ | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (LNin_$scope_mode$ | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))) & (! (LNin_$scope_mode$ | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((LNin_$scope_mode$ | LAST) V (! $post_condition$)))))))",
    "ftExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))) & (! ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) | LAST) V (! $post_condition$)))))))",
    "pt": "((H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$))))) & (((! LNin_$scope_mode$) S ((! LNin_$scope_mode$) & FNin_$scope_mode$)) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$))))",
    "ptExpanded": "((H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))) & (((! ($scope_mode$ & (Y (! $scope_mode$)))) S ((! ($scope_mode$ & (Y (! $scope_mode$)))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) -> (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))))",
    "CoCoSpecCode": "((H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) ))))) and ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not ($scope_mode$ and (pre ( not $scope_mode$)))) )) => (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) ))))",
    "R2U2Code": "Under construction.",
    "ftInfAU": "((G ((! FNin_$scope_mode$) | (X ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))) & ((! $scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))))))",
    "ftInfAUExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))) & ((! $scope_mode$) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))))))",
    "ftInfBtw": "((G ((! FNin_$scope_mode$) | (X ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((X $regular_condition$) & (! LNin_$scope_mode$))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftInfBtwExpanded": "((G ((! (($scope_mode$ & (! LAST)) & (X (! $scope_mode$)))) | (X ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> ((F (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ftFinBtw": "((LAST V ((! (FNin_$scope_mode$ & (! LAST))) | (X (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U LNin_$scope_mode$) -> ((LNin_$scope_mode$ V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! LNin_$scope_mode$)))) -> ((X ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$)))) & (! LNin_$scope_mode$)))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | (LNin_$scope_mode$ V (! $post_condition$))))))))",
    "ftFinBtwExpanded": "((LAST V ((! ((($scope_mode$ & (! LAST)) & (X (! $scope_mode$))) & (! LAST))) | (X (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))) & ((! $scope_mode$) -> (((! LAST) U (((! $scope_mode$) & (! LAST)) & (X $scope_mode$))) -> (((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (((! $regular_condition$) & ((! LAST) & ((X $regular_condition$) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) -> ((X ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$)))) & (! (((! $scope_mode$) & (! LAST)) & (X $scope_mode$)))))) & ($regular_condition$ -> ((G[<=$duration$] (! $post_condition$)) | ((((! $scope_mode$) & (! LAST)) & (X $scope_mode$)) V (! $post_condition$))))))))",
    "ptFinBtw": "(H ((LNin_$scope_mode$ & (! FTP)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | FNin_$scope_mode$))) -> (((! $regular_condition$) S ((! $regular_condition$) & FNin_$scope_mode$)) | (! $post_condition$))) & FNin_$scope_mode$)))))",
    "ptFinBtwExpanded": "(H ((($scope_mode$ & (Y (! $scope_mode$))) & (Y TRUE)) -> (Y (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) S (((O[<=$duration$] ($regular_condition$ & ((Y (! $regular_condition$)) | ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$)))))) -> (((! $regular_condition$) S ((! $regular_condition$) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))) | (! $post_condition$))) & ((! $scope_mode$) & ((! (Y TRUE)) | (Y $scope_mode$))))))))",
    "CoCoSpecCodeFinBtw": "(H((($scope_mode$ and (pre ( not $scope_mode$))) and ( not FTP)) => (pre (SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ((OT($duration$,0,($regular_condition$ and ((pre ( not $regular_condition$)) or (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))))))) => ((SI( (( not $scope_mode$) and (FTP or (pre ($scope_mode$)))), ( not $regular_condition$) )) or ( not $post_condition$))) )))))",
    "description": "ENFORCED: in every interval where $scope_mode$ does NOT hold.\nTRIGGER: first point in the interval if $regular_condition$ is true and any point in the interval where $regular_condition$ becomes true (from false).\nREQUIRES: for every trigger, RES must be false at all time points with distance <=$duration$ from the trigger (i.e., at trigger, trigger+1, ..., and trigger+$duration$), or until the end of the interval.",
    "diagram": "_media/user-interface/examples/svgDiagrams/onlyIn_regular_within_satisfaction.svg"
  }
}