// *****************************************************************************
// Notices:
//
// Copyright Â©2019, 2021 United States Government as represented by the Administrator
// of the National Aeronautics and Space Administration. All Rights Reserved.
//
// Disclaimers
//
// No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY OF
// ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED
// TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS,
// ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
// OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE
// ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO
// THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN
// ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS,
// RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS
// RESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY
// DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE, IF
// PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT ''AS IS.''
//
// Waiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST
// THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS
// ANY PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN
// ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE,
// INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S
// USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE
// UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY
// PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR
// ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS
// AGREEMENT.
// *****************************************************************************
// This Antlr4 file was machine-generated by the BNF converter
lexer grammar CopilotLexer;
// Predefined regular expressions in BNFC
fragment LETTER  : CAPITAL | SMALL ;
fragment CAPITAL : [A-Z\u00C0-\u00D6\u00D8-\u00DE] ;
fragment SMALL   : [a-z\u00DF-\u00F6\u00F8-\u00FF] ;
fragment DIGIT   : [0-9] ;
Surrogate_id_SYMB_0 : '=' ;
Surrogate_id_SYMB_1 : '(' ;
Surrogate_id_SYMB_2 : ')' ;
Surrogate_id_SYMB_3 : '++' ;
Surrogate_id_SYMB_4 : '#' ;
Surrogate_id_SYMB_5 : '[' ;
Surrogate_id_SYMB_6 : ']' ;
Surrogate_id_SYMB_7 : ',' ;
Surrogate_id_SYMB_8 : 'Field' ;
Surrogate_id_SYMB_9 : 'Just' ;
Surrogate_id_SYMB_10 : 'Nothing' ;
Surrogate_id_SYMB_11 : 'array' ;
Surrogate_id_SYMB_12 : 'constant' ;
Surrogate_id_SYMB_13 : 'drop' ;
Surrogate_id_SYMB_14 : 'extern' ;


VBOOL : 'True'|'False';
VFLOAT : '-'?DIGIT+'.'DIGIT+('e''-'?DIGIT+)?;
VINT : '-'?DIGIT+;
OPOne :
     'not'|'abs'|'signum'|'complement'|'recip'|'exp'|'sqrt'|'log'|'sin'|'cos'|'tan'|'asin'|'acos'|'atan'|'sinh'|'cosh'|'tanh'|'asinh'|'acosh'|'atanh'|'cast'|'unsafeCast';
OPTwo : '+'|
        '-'|
        '*'|
        'div' |
        'mod'|
        '/'|
        '**'|
        'logBase'|
        '<'|
        '<='|
        '=='|
        '/='|
        '>='|
        '>'|
        '&&'|
        '||'|
        'xor'|'==>'|'.&.'|'.|.'|'.^.'|'.>>.'|'.<<.'|'.!!';
OPThree : 'mux';
// String token type
STRING : '"' -> more, mode(STRINGMODE);



// Identifier token type
fragment
IDENTIFIER_FIRST : LETTER | '_';
IDENT : IDENTIFIER_FIRST (IDENTIFIER_FIRST | DIGIT)*;
// Whitespace
WS : (' ' | '\r' | '\t' | '\n' | '\f')+ ->  skip;
// Escapable sequences
fragment
Escapable : ('"' | '\\' | 'n' | 't' | 'r' | 'f');
ErrorToken : . ;
mode STRESCAPE;
STRESCAPED : Escapable  -> more, popMode ;
mode STRINGMODE;
STRINGESC : '\\' -> more , pushMode(STRESCAPE);
STRINGEND : '"' ->  type(STRING), mode(DEFAULT_MODE);
//STRINGTEXT : ~[\"\\] -> more;
